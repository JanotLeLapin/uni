---
import type { GetStaticPaths, MarkdownInstance } from 'astro';

import Layout from '@layouts/Layout.astro';

export const getStaticPaths = (async () => {
  const entries = await Astro.glob("../content/**/*.md");
  const res = entries.map(entry => ({
    params: { path: entry.file.split("content")[1].split(".md")[0], }
  }));
  return res;
}) as GetStaticPaths;

const { path } = Astro.params;

const entries = await Astro.glob("../content/**/*.md");
const entry = entries.find(e => e.file.includes(path as string)) as MarkdownInstance<Record<string, any>>;

const { title, katex } = entry?.frontmatter;
---

<Layout {title} {katex}>
  <main>
    <h1>{entry.frontmatter.title}</h1>
    <Fragment set:html={entry.compiledContent()} />
  </main>
  <nav class="headings">
    <ul>
      {entry.getHeadings().map(heading => (
        <li style={{ marginLeft: heading.depth * 6 + 'px' }}>
          <a href={'#' + heading.text.toLowerCase().split(' ').join('-')}>{heading.text}</a>
        </li>
      ))}
    </ul>
  </nav>
</Layout>
